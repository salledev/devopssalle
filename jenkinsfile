pipeline {

  environment {
     registry = "atos06/ipiformation"
     registryCredential = 'docker-hub-credentials'
     dockerImage = ''
  }

  agent any
  
  stages {

    stage('Build de l application') {
      steps {
        script {
           dockerImage = docker.build registry + ":$BUILD_NUMBER"
        }
      }
    }

    stage('Delcenchement des tests') {
      parallel {

        stage('Test affichage de la page d accueil') {
          steps {
            script {
               docker.image(registry+":$BUILD_NUMBER").withRun('--rm -p 80:80 --name devops') { c ->
                  sh 'docker ps'
                  sh 'docker exec devops curl localhost:80'
                  sh 'echo "Tests passed"'
               }
            }
          }
        }

        stage('Test integration') {
          steps {
            script {
              sh 'sleep 5'
            }
          }
        }

        stage('Test fonctionnel') {
          steps {
            script {
              sh 'sleep 5'
            }
          }
        }

        stage('Analyse qualité') {
          steps {
            script {
              sh 'sleep 5'
            }
          }
        }

        stage('Test de securité') {
          steps {
            script {
              sh 'sleep 5'
            }
          }
        }


      }
    }

    stage('Livraison') {
       steps{
          script {
             docker.withRegistry('https://registry.hub.docker.com', registryCredential ) {
                dockerImage.push("1.0")
             }
          }
       }
    }


    stage('Deploiement') {
      parallel {
  
        stage('Production') {
          steps {
            script {
              // def dockerRun = 'sudo docker run -d --name monserver -p 8081:80 atos06/ipiformation:1.0'
           
              //sshagent(['srvprod']) {
              //   sh 'ssh -tt -v -o StrictHostKeyChecking=no -l vagrant 192.168.5.5 ${dockerRun}'             
              }
            }
          }
        }
      
      } 
    }

  }
}
